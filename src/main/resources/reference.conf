akka {
  remote {
    artery {
      advanced {
        ingress-stage = "edu.illinois.osl.uigc.streams.Ingress"
        egress-stage = "edu.illinois.osl.uigc.streams.Egress"
      }
    }
  }
}
my-pinned-dispatcher {
  executor = "thread-pool-executor"
  type = PinnedDispatcher
}
uigc {
  # Which GC engine to use. May be "crgc", "wrc", or "manual". Defaults to "crgc".
  # "crgc" is a fault-recovering distributed GC that can collect cyclic garbage.
  # "wrc" is weighted reference counting. It is currently not safe to use in Cluster.
  # "manual" turns off actor GC.
  engine = "crgc"

  # Settings for the "crgc" engine.
  # To use use this engine, set the value of uigc.crgc.num-nodes to the maximum number of
  # nodes in the cluster. GC will not commence until all nodes have joined the cluster.
  crgc {
    # The mechanism by which actors are reminded to send an entry. May be "on-idle",
    # "on-block", or "wave". Defaults to "on-idle".
    # The "on-idle" setting means that actors send an entry after each message.
    # The "on-block" setting means that actors send an entry after they finish processing a batch of messages.
    # The "wave" setting means that local garbage collectors periodically send a control wave,
    # asking all local collectors to send an entry.
    collection-style = "on-block"

    # If collection-style is "wave", this setting configures how often the collector
    # sends a control wave.
    wave-frequency = 50
  }
}
